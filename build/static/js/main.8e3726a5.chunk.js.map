{"version":3,"sources":["routes/Login.js","components/Header.js","routes/Register.js","components/Routines/Card.js","components/Routines/ActivityCard.js","components/Loading.js","routes/Routines.js","components/MyRoutine/UpdateRoutine.js","components/MyRoutine/AddActivity.js","components/MyRoutine/UpdateActivity.js","routes/MyRoutines.js","components/MyRoutine/CreateRoutine.js","components/Activities/Create.js","components/Activities/Card.js","components/Activities/Update.js","routes/Activities.js","index.js"],"names":["Login","getToken","history","useHistory","useState","userName","password","userData","setUserData","submitError","error","setError","submitForm","fetch","method","headers","body","JSON","stringify","username","then","response","json","result","console","log","token","localStorage","setItem","user","push","errorMessage","message","catch","className","onChange","e","target","value","type","id","placeholder","onClick","formError","valid","length","to","Header","props","setToken","useEffect","getItem","pathname","Register","Card","data","setRoutineActivityData","setEditData","setEdit","handleDelete","setIsLoading","setAddActy","style","lineHeight","name","goal","cursor","creatorName","from","ActivityCard","routineActivityData","setEditActData","setEditAct","handleDeleteAct","activities","fontSize","padding","flexDirection","fontWeight","map","item","index","borderBottom","backgroundColor","borderRadius","margin","description","duration","count","routineActivityId","flex","Loading","Routines","routine","setRoutine","searchInput","setSearchInput","isLoading","getPublicRoutine","newArray","includes","handleSearch","display","maxHeight","overflowY","width","postcard","UpdateRoutine","postID","useParams","routineData","setRoutineData","successMessage","setSuccessMessage","success","setSuccess","updateRoutine","AddActivity","activityList","parse","selectedActy","routineId","activity","setActivity","activityId","htmlFor","UpdateActivity","editActData","MyRoutines","edit","editData","addActy","editAct","CreateRoutine","Checkbox","isPublic","Create","hasToken","Update","Activities","widht","App","fetchToken","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e3726a5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nconst Login = ({ getToken }) => {\r\n\r\n  let history = useHistory();\r\n  const [userData, setUserData] = useState({\r\n    userName: \"\",\r\n    password: \"\"\r\n  })\r\n  const [error, setError] = useState({\r\n    userName: false,\r\n    password: false,\r\n    submitError: false\r\n  })\r\n\r\n\r\n  const validateForm = () => {\r\n    let formError = {};\r\n    let valid = true;\r\n\r\n    if ((userData.userName).length < 3) {\r\n      valid = false;\r\n      formError = { ...formError, userName: true }\r\n    }\r\n    if ((userData.password).length < 3) {\r\n      valid = false;\r\n      formError = { ...formError, password: true }\r\n    }\r\n    setError(formError)\r\n    if (valid) {\r\n      submitForm()\r\n    }\r\n  }\r\n\r\n  const submitForm = () => {\r\n    fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        username: userData.userName,\r\n        password: userData.password\r\n      })\r\n    }).then(response => response.json())\r\n      .then(result => {\r\n        console.log(\"submitForm ~ result\", result)\r\n        if (result && result.token) {\r\n          localStorage.setItem('token', result.token);\r\n          localStorage.setItem('user', JSON.stringify(result.user));\r\n          return history.push('/routines');\r\n        }\r\n        else {\r\n          setError({ ...error, submitError: true, errorMessage: result.message })\r\n        }\r\n        console.log(result);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  return (\r\n    <div className=\"log\">\r\n      <div>\r\n        <h1>Log in</h1>\r\n        <label>Username</label>\r\n        <input\r\n          onChange={(e) => {\r\n            setUserData({ ...userData, userName: e.target.value })\r\n          }}\r\n          type=\"text\"\r\n          id=\"keywords\"\r\n          placeholder=\"Username...\"\r\n          value={userData.userName} /><br />\r\n        {error.userName ? \"Please enter valid username\" : null}<br />\r\n        <label>Password</label>\r\n        <input\r\n          onChange={(e) => {\r\n            setUserData({ ...userData, password: e.target.value })\r\n          }}\r\n          type=\"password\"\r\n          id=\"keywords\"\r\n          placeholder=\"Password...\"\r\n          value={userData.password} /><br />\r\n        {error.password ? \"Please enter valid password\" : null}<br />\r\n        {error.submitError ? error.errorMessage : null}<br />\r\n        {/* </form> */}\r\n        <button onClick={validateForm}>Log In</button>\r\n        <p>Don't have an account? <Link to=\"/register\">Register</Link></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    console.log(\"Header ~ props\", props)\r\n    const history = useHistory()\r\n    const [token, setToken] = useState(props.token || \"\");\r\n\r\n    useEffect(() => {\r\n        console.log(\"token201\", token)\r\n        setToken(localStorage.getItem(\"token\"))\r\n    }, [props])\r\n\r\n\r\n    return (\r\n        <div className=\"headercontainer\">\r\n            <h1>FitnessTrackr</h1>\r\n            <h2><Link to=\"/profile\">Home</Link></h2>\r\n            <h2><Link to=\"/routines\">Routines</Link></h2>\r\n            {token && token.length > 0 ?\r\n                <h2><Link to=\"/myroutines\">My Routines</Link></h2> : null}\r\n            <h2><Link to=\"/activities\">Activities</Link></h2>\r\n            {token && token.length > 0 ?\r\n                <h2><Link to=\"#\"\r\n                    onClick={() => {\r\n                        localStorage.setItem(\"token\", \"\");\r\n                        localStorage.setItem(\"user\", \"\");\r\n                        history.push({\r\n                            pathname: `/login`,\r\n                        })\r\n                    }}>Log Out</Link></h2>\r\n                : <h2><Link to=\"/login\">SignIn</Link></h2>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n// <div className=\"logo\">\r\n// <div className=\"contents\"></div>\r\n","import React, { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n    let history = useHistory();\r\n    const [userData, setUserData] = useState({\r\n        userName: \"\",\r\n        password: \"\"\r\n    })\r\n    const [error, setError] = useState({\r\n        userName: false,\r\n        password: false,\r\n        submitError: false\r\n    })\r\n\r\n\r\n    const validateForm = () => {\r\n        let formError = {};\r\n        let valid = true;\r\n\r\n        if ((userData.userName).length < 3) {\r\n            valid = false;\r\n            formError = { ...formError, userName: true }\r\n        }\r\n        if ((userData.password).length < 3) {\r\n            valid = false;\r\n            formError = { ...formError, password: true }\r\n        }\r\n        setError(formError)\r\n        if (valid) {\r\n            submitForm()\r\n        }\r\n    }\r\n\r\n    const submitForm = () => {\r\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/register`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: userData.userName,\r\n                password: userData.password\r\n            })\r\n        }).then(response => response.json())\r\n            .then(result => {\r\n                if (result && result.token) {\r\n                    localStorage.setItem('token', result.token);\r\n                    localStorage.setItem('user', JSON.stringify(result.user));\r\n                    return history.push('/myroutines');\r\n                }\r\n                else {\r\n                    setError({ ...error, submitError: true, errorMessage: result.message })\r\n                }\r\n                console.log(result);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    return (\r\n        <div className=\"log\">\r\n            <div>\r\n                <h1>Register</h1>\r\n                <label>Username</label>\r\n                <input\r\n                    onChange={(e) => {\r\n                        setUserData({ ...userData, userName: e.target.value })\r\n                    }}\r\n                    type=\"text\"\r\n                    id=\"keywords\"\r\n                    placeholder=\"Username...\"\r\n                    value={userData.userName} /><br />\r\n                {error.userName ? \"Please enter valid username\" : null}<br />\r\n                <label>Password</label>\r\n                <input\r\n                    onChange={(e) => {\r\n                        setUserData({ ...userData, password: e.target.value })\r\n                    }}\r\n                    type=\"password\"\r\n                    id=\"keywords\"\r\n                    placeholder=\"Password...\"\r\n                    value={userData.password} /><br />\r\n                {error.password ? \"Please enter valid password\" : null}<br />\r\n                {error.submitError ? error.errorMessage : null}<br />\r\n                <button onClick={validateForm}>Sign Up</button>\r\n                <p>Already have an account? <Link to=\"/login\">Sign In</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from 'react';\r\n// import { Link, useHistory } from 'react-router-dom';\r\n// import Create from '../../routes/Create';\r\n// import AddPost from '../../routes/Create'\r\n\r\n\r\nconst Card = (data) => {\r\n    console.log(\"Card ~ data\", data)\r\n    const { setRoutineActivityData, setEditData, setEdit, setIsLoading, handleDelete, setAddActy } = data;\r\n\r\n    return (\r\n        <div className=\"routineCard\">\r\n            <h2 style={{ lineHeight: '20px' }}>Name: {data.data.name}</h2>\r\n            <h3 style={{ lineHeight: '20px' }}>Goal: {data.data.goal}</h3>\r\n            <h4 style={{ cursor: 'pointer' }} onClick={() => {\r\n                setRoutineActivityData(data);\r\n            }}>CreatorName: {data.data.creatorName}</h4>\r\n            {data.from === \"myRoutine\"\r\n                ?\r\n                <>\r\n                    <button\r\n                        onClick={() => {\r\n                            setEdit(true);\r\n                            setEditData(data.data);\r\n                        }}>\r\n                        Edit\r\n          </button>\r\n                    <button\r\n                        onClick={() => handleDelete(data.data.id)}>Delete</button>\r\n                    <button\r\n                        onClick={() => { setAddActy(true); setRoutineActivityData(data); }}>Add Activity</button>\r\n                </>\r\n                : null}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Create from '../../routes/Create';\r\nimport AddPost from '../../routes/Create'\r\n\r\n\r\nconst ActivityCard = (props) => {\r\n    console.log(\"ActivityCard ~ props\", props)\r\n    const data = props && props.routineActivityData && props.routineActivityData.data || '';\r\n    const from = props && props.routineActivityData && props.routineActivityData.from || '';\r\n    const setEditActData = props && props && props.setEditActData || {};\r\n    const setEditAct = props && props.setEditAct || {};\r\n    const handleDeleteAct = props && props.handleDeleteAct || {};\r\n    return (\r\n        <div className=\"postcard\">\r\n            {data && data.activities && data.activities.length > 0 ?\r\n                <>\r\n                    <div style={{ fontSize: \"20px\", padding: \"0.5rem\", flexDirection: \"column\", fontWeight: 600 }}>\r\n                        Routines Name : {data.name}\r\n                    </div>\r\n                    <div style={{ fontSize: \"18px\", padding: \"0.5rem\", flexDirection: \"column\", fontWeight: 600 }}>\r\n                        Routines Goal: {data.goal}\r\n                    </div>\r\n                    <div style={{ fontSize: \"16px\", padding: \"0.5rem\", flexDirection: \"column\", fontWeight: 600 }}>\r\n                        Activity List\r\n            </div>\r\n                    {data.activities.map((item, index) => {\r\n                        return (\r\n                            <div key={index} style={{ borderBottom: '2px solid #2196f3', backgroundColor: '#B0E0E6', borderRadius: 10, margin: 10 }}>\r\n                                <div style={{ fontSize: \"20px\", padding: \"0.5rem\", flexDirection: \"column\" }}>\r\n                                    Name: {item.name}\r\n                                </div>\r\n                                <div style={{ fontSize: \"20px\", padding: \"0.5rem\", flexDirection: \"column\", lineHeight: '1.5rem', }}>\r\n                                    Description: {item.description}\r\n                                </div>\r\n                                <div style={{ fontSize: \"20px\", padding: \"0.5rem\", flexDirection: \"column\" }}>\r\n                                    Duration: {item.duration}\r\n                                </div>\r\n                                {item.count > 0 ? <div style={{ fontSize: \"20px\", padding: \"0.5rem\", flexDirection: \"column\" }}>\r\n                                    Count: {item.count}\r\n                                </div> : null}\r\n                                {from === \"myRoutine\"\r\n                                    ?\r\n                                    <>\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                setEditAct(true);\r\n                                                setEditActData(item);\r\n                                            }}>\r\n                                            Edit\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => handleDeleteAct(item.routineActivityId)}>Delete</button>\r\n                                    </>\r\n                                    : null}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </> :\r\n                <>\r\n                    <div style={{ fontSize: \"20px\", padding: \"0.5rem\", flexDirection: \"column\", fontWeight: 600, flex: 1 }}>\r\n                        This routine has not activity\r\n            </div>\r\n                </>}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ActivityCard;\r\n","import React from 'react';\n// import { Loading } from '.';\n\n/**\n * Create and export a component called Loading which uses this static HTML template:\n * \n * <div id=\"loading\">\n *   <h2 className=\"message\">Searching...</h2>\n * </div>\n */\n\nconst Loading = () => {\n   return (\n      <div id=\"loading\">\n         <h2 className=\"message\">Loading...</h2>\n      </div>\n   )\n}\n\nexport default Loading;\n","import React, { useState, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport Card from '../components/Routines/Card';\r\nimport ActivityCard from '../components/Routines/ActivityCard';\r\n\r\nimport { Loading } from '../components';\r\n\r\nconst Routines = () => {\r\n\r\n    const [routine, setRoutine] = useState([])\r\n    const [searchInput, setSearchInput] = useState(\"\")\r\n    const [token] = useState(localStorage.getItem('token'))\r\n    const [routineActivityData, setRoutineActivityData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // const [editAct, setEditAct] = useState(false);\r\n    // const [editActData, setEditActData] = useState({});\r\n\r\n    useEffect(() => {\r\n        // setToken(localStorage.getItem('token'))\r\n        // setToken(localStorage.getItem('token'))\r\n        // console.log(\"token\", token)\r\n        // if (token && token.length > 0) {\r\n        getPublicRoutine()\r\n        // }\r\n    }, []);\r\n\r\n    const getPublicRoutine = () => {\r\n        setIsLoading(true);\r\n        console.log(\"token2\", `Bearer ${token}`)\r\n        fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': `Bearer ${token}`\r\n            },\r\n        }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                setRoutine(result)\r\n                setIsLoading(false);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    const handleSearch = (name) => {\r\n        let newArray = [];\r\n        if (name.length <= 0) {\r\n            newArray = routine\r\n        } else {\r\n            routine.map((item) => {\r\n                if ((item.name).includes(name)) {\r\n                    newArray = [...newArray, item]\r\n                }\r\n            })\r\n        }\r\n        if (name.length > 0) {\r\n            setRoutine(newArray)\r\n        } else {\r\n            getPublicRoutine()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"postcardsearch\">\r\n                <h1>Routines</h1>\r\n                <div className=\"searchinput\"><label>Search Routines</label>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setSearchInput(e.target.value)\r\n                            handleSearch(e.target.value)\r\n                        }}\r\n                        type=\"text\"\r\n                        placeholder=\"Search your favorite routine...\"\r\n                        value={searchInput} /><br />\r\n                </div>\r\n                {/* {error.userName ? \"Please enter valid username\" : null}<br/> */}\r\n                {/* <Link to=\"posts/add\">(ADD routine)</Link> */}\r\n            </div>\r\n            <div style={{ display: 'flex', maxHeight: '80vh', overflowY: 'scroll' }}>\r\n                <div style={{ width: '30%', overflowY: 'scroll' }}>\r\n                    {routine.map((postcard, index) => (\r\n                        <Card\r\n                            data={postcard}\r\n                            key={index}\r\n                            setRoutineActivityData={setRoutineActivityData}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                {<div style={{ width: '70%', overflowY: 'scroll' }}>\r\n                    <ActivityCard routineActivityData={routineActivityData} />\r\n                </div>}\r\n            </div>\r\n            {!isLoading ? null : <Loading />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routines;\r\n\r\n\r\n//  <Link to=\"posts/add/:postID\">(ADD routine)</Link>\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from 'react-router-dom';\n\n\nconst UpdateRoutine = (props) => {\n    console.log(\"props\", props)\n    const { data, setEdit } = props;\n    let history = useHistory();\n    const { postID } = useParams();\n    console.log(postID)\n    const [routineData, setRoutineData] = useState({\n        name: data.name ? data.name : \"\",\n        goal: data.goal ? data.goal : \"\"\n    })\n    const [error, setError] = useState({\n        name: false,\n        goal: false\n    })\n\n    const [successMessage, setSuccessMessage] = useState(\"\")\n    const [success, setSuccess] = useState(false)\n\n    const validateRoutine = () => {\n        let formError = {};\n        let valid = true;\n        if ((routineData.name).length < 3) {\n            valid = false;\n            formError = { ...formError, name: true }\n        }\n        if ((routineData.goal).length < 3) {\n            valid = false;\n            formError = { ...formError, goal: true }\n        }\n        setError(formError)\n        if (valid) {\n            updateRoutine()\n        }\n    }\n\n    const updateRoutine = () => {\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines/${data.id}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                name: routineData.name,\n                goal: routineData.goal,\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n                console.log(\"🚀 ~ file: UpdateRoutine.js ~ line 73 ~ updateRoutine ~ result\", result)\n                setSuccessMessage(\"Your Routine is successfully created\")\n                setSuccess(true)\n                setEdit(false)\n            })\n            .catch(console.error);\n    }\n\n    return (\n        <div className=\"log\" style={{ backgroundColor: \"lightgrey\" }}>\n            <div>\n                <h1>Update Routine</h1>\n                <label>Name : </label>\n                <input\n                    onChange={(e) => {\n                        setRoutineData({ ...routineData, name: e.target.value })\n                    }}\n                    type=\"text\"\n                    id=\"keywords\"\n                    placeholder=\"Routine name...\"\n                    value={routineData.name} /><br />\n                {error.name ? \"Please enter your name\" : null}<br />\n                <label>Goal : </label>\n                <input\n                    onChange={(e) => {\n                        setRoutineData({ ...routineData, goal: e.target.value })\n                    }}\n                    type=\"text\"\n                    id=\"keywords\"\n                    placeholder=\"Description...\"\n                    value={routineData.goal} /><br />\n                {error.goal ? \"Please enter valid goal desrciption\" : null}\n                {error.submitError ? error.errorMessage : null}<br />\n                <button onClick={validateRoutine}>Update Routine</button><br />\n                <button onClick={() => setEdit(false)}>Cancel</button><br />\n                {success ? successMessage : null}\n            </div>\n\n        </div>\n    )\n}\n\nexport default UpdateRoutine;\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from 'react-router-dom';\n\n\nconst AddActivity = (props) => {\n    console.log(\"props\", props)\n    const { data, setAddActy } = props;\n    console.log(\"🚀 ~ file: AddActivity.js ~ line 8 ~ AddActivity ~ data\", data)\n    let history = useHistory();\n    const { postID } = useParams();\n    console.log(postID)\n    const [activity, setActivity] = useState({\n        count: data.count ? data.count : \"\",\n        duration: data.duration ? data.duration : \"\",\n        activityList: JSON.parse(localStorage.getItem('activites')) || [],\n        selectedActy: '',\n        routineId: data.data.id ? data.data.id : 0,\n    })\n    const [error, setError] = useState({\n        count: false,\n        duration: false\n    })\n\n    const [successMessage, setSuccessMessage] = useState(\"\")\n    const [success, setSuccess] = useState(false)\n\n    const validateActivity = () => {\n        let formError = {};\n        let valid = true;\n        console.log(\"🚀 ~ file: AddActivity.js ~ line 29 ~ validateActivity ~ activity\", `https://fitnesstrac-kr.herokuapp.com/api/routines/${data.data.id}/activities`)\n        // if ((activity.count).length < 3) {\n        //     valid = false;\n        //     formError = { ...formError, count: true }\n        // }\n        // if ((activity.duration).length < 3) {\n        //     valid = false;\n        //     formError = { ...formError, duration: true }\n        // }\n        // setError(formError)\n        if (valid) {\n            updateRoutine()\n        }\n    }\n\n    const updateRoutine = () => {\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines/${activity.routineId}/activities`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                activityId: activity.selectedActy,\n                count: activity.count,\n                duration: activity.duration,\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n                console.log(\"🚀 ~ file: AddActivity.js ~ line 73 ~ updateRoutine ~ result\", result)\n                if (result && result.message) {\n                    setSuccessMessage(result.message);\n                } else {\n                    setSuccessMessage(\"Your Routine is successfully created\")\n                    setAddActy(false);\n                }\n                setSuccess(true)\n                setEdit(false)\n            })\n            .catch(console.error);\n    }\n\n    return (\n        <div className=\"log\" style={{ backgroundColor: \"lightgrey\" }}>\n            <div>\n                <h1>Add Activity to routine</h1>\n                <label htmlFor=\"select-classification\">Activity</label>\n                <select\n                    count=\"classification\"\n                    id=\"select-classification\"\n                    value={activity.selectedActy}\n                    onChange={(e) => setActivity({ ...activity, selectedActy: e.target.value })}>\n                    <option value=\"\"></option>\n                    {activity.activityList && activity.activityList.length > 0 && activity.activityList.map((item, index) => {\n                        return (\n                            <option value={item.id} key={index}>{item.name}</option>\n                        )\n                    })}\n                </select><br />\n                <label>Count : </label>\n                <input\n                    onChange={(e) => {\n                        setActivity({ ...activity, count: e.target.value })\n                    }}\n                    type=\"text\"\n                    id=\"keywords\"\n                    placeholder=\"count...\"\n                    value={activity.count} /><br />\n                {error.count ? \"Please enter your count\" : null}<br />\n                <label>Duration : </label>\n                <input\n                    onChange={(e) => {\n                        setActivity({ ...activity, duration: e.target.value })\n                    }}\n                    type=\"text\"\n                    id=\"keywords\"\n                    placeholder=\"Duration...\"\n                    value={activity.duration} /><br />\n                {error.duration ? \"Please enter valid duration desrciption\" : null}\n                {error.submitError ? error.errorMessage : null}<br />\n                <button onClick={validateActivity}>Add Activity</button><br />\n                <button onClick={() => setAddActy(false)}>Cancel</button><br />\n                {success ? successMessage : null}\n            </div>\n\n        </div>\n    )\n}\n\nexport default AddActivity;\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from 'react-router-dom';\n\n\nconst UpdateActivity = (props) => {\n    console.log(\"props\", props)\n    const { data, setAddActy, setEditAct, editActData } = props;\n    console.log(\"🚀 ~ file: UpdateActivity.js ~ line 8 ~ UpdateActivity ~ data\", data)\n    let history = useHistory();\n    const { postID } = useParams();\n    console.log(postID)\n    const [activity, setActivity] = useState({\n        count: editActData.count ? editActData.count : \"\",\n        duration: editActData.duration ? editActData.duration : \"\",\n        activityList: JSON.parse(localStorage.getItem('activites')) || [],\n        selectedActy: '',\n        routineId: editActData.routineActivityId ? editActData.routineActivityId : 0,\n    })\n    const [error, setError] = useState({\n        count: false,\n        duration: false\n    })\n\n    const [successMessage, setSuccessMessage] = useState(\"\")\n    const [success, setSuccess] = useState(false)\n\n    const validateActivity = () => {\n        let formError = {};\n        let valid = true;\n        // console.log(\"🚀 ~ file: UpdateActivity.js ~ line 29 ~ validateActivity ~ activity\", `https://fitnesstrac-kr.herokuapp.com/api/routines/${data.data.id}/activities`)\n        // if ((activity.count).length < 3) {\n        //     valid = false;\n        //     formError = { ...formError, count: true }\n        // }\n        // if ((activity.duration).length < 3) {\n        //     valid = false;\n        //     formError = { ...formError, duration: true }\n        // }\n        // setError(formError)\n        if (valid) {\n            updateRoutine()\n        }\n    }\n\n    const updateRoutine = () => {\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${activity.routineId}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                count: activity.count,\n                duration: activity.duration,\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n                console.log(\"🚀 ~ file: UpdateActivity.js ~ line 73 ~ updateRoutine ~ result\", result)\n                if (result && result.message) {\n                    setSuccessMessage(result.message);\n                } else {\n                    setSuccessMessage(\"Your Routine is successfully created\")\n                    setEditAct(false);\n                }\n                setSuccess(true)\n                setEdit(false)\n            })\n            .catch(console.error);\n    }\n\n    return (\n        <div className=\"log\" style={{ backgroundColor: \"lightgrey\" }}>\n            <div>\n                <h1>Update Activity of routine</h1>\n                <label htmlFor=\"select-classification\">Activity: {editActData.name}</label><br /><br />\n                <label>Count : </label>\n                <input\n                    onChange={(e) => {\n                        setActivity({ ...activity, count: e.target.value })\n                    }}\n                    type=\"text\"\n                    id=\"keywords\"\n                    placeholder=\"count...\"\n                    value={activity.count} /><br />\n                {error.count ? \"Please enter your count\" : null}<br />\n                <label>Duration : </label>\n                <input\n                    onChange={(e) => {\n                        setActivity({ ...activity, duration: e.target.value })\n                    }}\n                    type=\"text\"\n                    id=\"keywords\"\n                    placeholder=\"Duration...\"\n                    value={activity.duration} /><br />\n                {error.duration ? \"Please enter valid duration desrciption\" : null}\n                {error.submitError ? error.errorMessage : null}<br />\n                <button onClick={validateActivity}>Update Activity</button><br />\n                <button onClick={() => setEditAct(false)}>Cancel</button><br />\n                {success ? successMessage : null}\n            </div>\n\n        </div>\n    )\n}\n\nexport default UpdateActivity;\n\n\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../components/Routines/Card';\r\nimport ActivityCard from '../components/Routines/ActivityCard';\r\nimport UpdateRoutine from '../components/MyRoutine/UpdateRoutine';\r\n\r\nimport { Loading } from '../components';\r\nimport AddActivity from '../components/MyRoutine/AddActivity';\r\nimport UpdateActivity from '../components/MyRoutine/UpdateActivity';\r\n\r\nconst MyRoutines = () => {\r\n\r\n    const [routine, setRoutine] = useState([])\r\n    const [searchInput, setSearchInput] = useState(\"\")\r\n    const [token, setToken] = useState(localStorage.getItem('token'))\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user') || {}))\r\n    console.log(\"🚀 ~ file: MyRoutines.js ~ line 14 ~ MyRoutines ~ user\", user)\r\n    const [routineActivityData, setRoutineActivityData] = useState(null);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const [editData, setEditData] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [addActy, setAddActy] = useState(false);\r\n    const [editAct, setEditAct] = useState(false);\r\n    const [editActData, setEditActData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (user && user.username) {\r\n            getPublicRoutine()\r\n        } else {\r\n            setRoutine();\r\n        }\r\n    }, [!edit, !addActy]);\r\n\r\n    const getPublicRoutine = () => {\r\n        setIsLoading(true);\r\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/${user.username}/routines`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(\"🚀 ~ file: MyRoutines.js ~ line 35 ~ getPublicRoutine ~ result\", result)\r\n                console.log(result);\r\n                setRoutine(result)\r\n                setIsLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"🚀 ~ file: MyRoutines.js ~ line 40 ~ getPublicRoutine ~ error\", error)\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const handleSearch = (name) => {\r\n        let newArray = [];\r\n        if (name.length <= 0) {\r\n            newArray = routine\r\n        } else {\r\n            routine.map((item) => {\r\n                if ((item.name).includes(name)) {\r\n                    newArray = [...newArray, item]\r\n                }\r\n            })\r\n        }\r\n        if (name.length > 0) {\r\n            setRoutine(newArray)\r\n        } else {\r\n            getPublicRoutine()\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        console.log(\"🚀 ~ file: MyRoutines.js ~ line 63 ~ handleDelete ~ id\", id)\r\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(\"🚀 ~ file: MyRoutines.js ~ line 72 ~ handleDelete ~ result\", result)\r\n                getPublicRoutine();\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    const handleDeleteAct = (id) => {\r\n        console.log(\"🚀 ~ file: MyRoutines.js ~ line 63 ~ handleDelete ~ id\", id)\r\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(\"🚀 ~ file: MyRoutines.js ~ line 72 ~ handleDelete ~ result\", result)\r\n                getPublicRoutine();\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"postcardsearch\">\r\n                <h1>MyRoutines</h1>\r\n                <div className=\"searchinput\"><label>Search your Routines</label>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setSearchInput(e.target.value)\r\n                            handleSearch(e.target.value)\r\n                        }}\r\n                        type=\"text\"\r\n                        placeholder=\"Search your favorite routine...\"\r\n                        value={searchInput} /><br />\r\n                </div>\r\n                {/* {error.userName ? \"Please enter valid username\" : null}<br/> */}\r\n                <Link to=\"routine/add\">(ADD New Routine)</Link>\r\n            </div>\r\n            <div style={{ display: 'flex', maxHeight: '80vh', overflowY: 'scroll' }}>\r\n                <div style={{ width: '50%', overflowY: 'scroll' }}>\r\n                    {routine.map((postcard, index) => (\r\n                        <Card\r\n                            from=\"myRoutine\"\r\n                            data={postcard}\r\n                            key={index}\r\n                            setRoutineActivityData={setRoutineActivityData}\r\n                            setEditData={setEditData}\r\n                            setEdit={setEdit}\r\n                            setIsLoading={setIsLoading}\r\n                            setAddActy={setAddActy}\r\n                            handleDelete={(id) => handleDelete(id)}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div style={{ width: '50%', overflowY: 'scroll' }}>\r\n                    {edit ?\r\n                        <UpdateRoutine data={editData} setEdit={setEdit} />\r\n                        : addActy ?\r\n                            <AddActivity data={routineActivityData} editAct={editAct} editActData={editActData} setAddActy={setAddActy} />\r\n                            : editAct ?\r\n                                <UpdateActivity data={routineActivityData} editAct={editAct} editActData={editActData} setEditAct={setEditAct} />\r\n                                :\r\n                                <ActivityCard routineActivityData={routineActivityData} setEditAct={setEditAct} setEditActData={setEditActData} handleDeleteAct={(id) => handleDeleteAct(id)} />\r\n                    }\r\n                </div>\r\n            </div>\r\n            {!isLoading ? null : <Loading />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyRoutines;\r\n\r\n\r\n//  <Link to=\"posts/add/:postID\">(ADD routine)</Link>\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link, useParams } from 'react-router-dom';\n\n\nconst CreateRoutine = (props) => {\n    console.log(\"props\", props)\n\n    let history = useHistory();\n    const { postID } = useParams();\n    console.log(postID)\n    const [routineData, setRoutineData] = useState({\n        name: \"\",\n        goal: \"\",\n        Checkbox: false\n    })\n    const [error, setError] = useState({\n        name: false,\n        goal: false,\n        Checkbox: false\n    })\n\n    const [successMessage, setSuccessMessage] = useState(\"\")\n\n    const [success, setSuccess] = useState(false)\n\n    const validateRoutine = () => {\n        let formError = {};\n        let valid = true;\n        console.log(\"🚀 ~ file: CreateRoutine.js ~ line 31 ~ validateRoutine ~ routineData\", routineData)\n        if (routineData.name.length < 3) {\n            valid = false;\n            formError = { ...formError, name: true }\n        }\n        if (routineData.goal.length < 3) {\n            valid = false;\n            formError = { ...formError, goal: true }\n        }\n        setError(formError)\n        if (valid) {\n            submitForm()\n        }\n    }\n\n    const submitForm = () => {\n        fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                name: routineData.name,\n                goal: routineData.goal,\n                isPublic: true\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(\"🚀 ~ file: CreateRoutine.js ~ line 71 ~ submitForm ~ result\", result)\n                if (result && result.error) {\n                    setSuccessMessage(result.message)\n                    setSuccess(true)\n                }\n                else {\n                    setSuccessMessage(\"Your Routine is successfully created\")\n                    setSuccess(true)\n                    return history.push('/myroutines');\n                }\n            })\n            .catch(console.error);\n    }\n\n    return (\n        <div className=\"log\" style={{ backgroundColor: \"lightgrey\" }}>\n            <div>\n                <h1>Add New Routine</h1>\n                <label>Name : </label>\n                <input\n                    onChange={(e) => {\n                        setRoutineData({ ...routineData, name: e.target.value })\n                    }}\n                    type=\"text\"\n                    id=\"keywords\"\n                    placeholder=\"Routine name...\"\n                    value={routineData.name} /><br />\n                {error.name ? \"Please enter your name\" : null}<br />\n                <label>Goal : </label>\n                <input\n                    onChange={(e) => {\n                        setRoutineData({ ...routineData, goal: e.target.value })\n                    }}\n                    type=\"text\"\n                    id=\"keywords\"\n                    placeholder=\"Description...\"\n                    value={routineData.goal} /><br />\n                {error.goal ? \"Please enter valid goal desrciption\" : null}\n                {error.submitError ? error.errorMessage : null}<br />\n                {/* <input type=\"checkbox\" value={routineData.Checkbox}\n                    onChange={(e) => {\n                        setRoutineData({ ...routineData, Checkbox: !routineData.Checkbox })\n                    }} />\n                <label>Public</label><br /><br /> */}\n                <button onClick={validateRoutine}>Create Routine</button><br />\n                {success ? successMessage : null}\n            </div>\n\n        </div>\n    )\n}\n\nexport default CreateRoutine;\n\n\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, Link, useParams } from 'react-router-dom';\r\n\r\n\r\nconst Create = (props) => {\r\n    console.log(\"props\", props)\r\n    let history = useHistory();\r\n    const { postID } = useParams();\r\n    console.log(postID)\r\n    const [activity, setActivity] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n    })\r\n    const [error, setError] = useState({\r\n        name: false,\r\n        description: false,\r\n    })\r\n\r\n    const [successMessage, setSuccessMessage] = useState(\"\")\r\n\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const validateActivity = () => {\r\n        let formError = {};\r\n        let valid = true;\r\n\r\n        if ((activity.name).length < 3) {\r\n            valid = false;\r\n            formError = { ...formError, name: true }\r\n        }\r\n        if ((activity.description).length < 3) {\r\n            valid = false;\r\n            formError = { ...formError, description: true }\r\n        }\r\n        setError(formError)\r\n        if (valid) {\r\n            submitForm()\r\n        }\r\n    }\r\n\r\n    const submitForm = () => {\r\n        console.log(\"token414\", `Bearer ${localStorage.getItem('token')}`)\r\n        fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify({\r\n                name: activity.name,\r\n                description: activity.description\r\n            })\r\n        }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                console.log(\"🚀 ~ file: Create.js ~ line 72 ~ submitForm ~ result\", result)\r\n                if (result && result.error) {\r\n                    setSuccessMessage(result.message)\r\n                    setSuccess(true)\r\n                }\r\n                else {\r\n                    setSuccessMessage(\"Your Activities is successfully created\")\r\n                    setSuccess(true)\r\n                    return history.push('/activities');\r\n                }\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    return (\r\n        <div className=\"log\" style={{ backgroundColor: \"lightgrey\" }}>\r\n            <div>\r\n                <h1>Add New Activity</h1>\r\n                <label>Name : </label>\r\n                <input\r\n                    onChange={(e) => {\r\n                        setActivity({ ...activity, name: e.target.value })\r\n                    }}\r\n                    type=\"text\"\r\n                    id=\"keywords\"\r\n                    placeholder=\"Username...\"\r\n                    value={activity.name} /><br />\r\n                {error.name ? \"Please enter valid title\" : null}<br />\r\n                <label>Description : </label>\r\n                <input\r\n                    onChange={(e) => {\r\n                        setActivity({ ...activity, description: e.target.value })\r\n                    }}\r\n                    type=\"text\"\r\n                    id=\"keywords\"\r\n                    placeholder=\"description...\"\r\n                    value={activity.description} /><br />\r\n                {error.description ? \"Please enter valid description\" : null}<br />\r\n                {error.submitError ? error.errorMessage : null}<br />\r\n                <button onClick={validateActivity}>Create</button><br />\r\n                {success ? successMessage : null}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n// import { Link, useHistory } from 'react-router-dom';\r\n// import Create from '../../routes/Create';\r\n// import AddPost from '../../routes/Create'\r\n\r\n\r\nconst Card = (data) => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const hasToken = token && token.length > 0 ? true : false;\r\n\r\n    const from = data && data.from || '';\r\n    const setEditAct = data && data.setEditAct || '';\r\n    const setEditActData = data && data.setEditActData || '';\r\n    return (\r\n        <div className=\"activityCard\">\r\n            <h2>Name: {data.data.name}</h2>\r\n            <h3>Description: {data.data.description}</h3>\r\n            {hasToken\r\n                ?\r\n                <>\r\n                    <button\r\n                        onClick={() => {\r\n                            setEditAct(true);\r\n                            setEditActData(data.data);\r\n                        }}>\r\n                        Edit\r\n                                        </button>\r\n                </>\r\n                : null}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, Link, useParams } from 'react-router-dom';\r\n\r\n\r\nconst Update = (props) => {\r\n    console.log(\"props\", props)\r\n    let history = useHistory();\r\n    const { postID } = useParams();\r\n    console.log(postID)\r\n    const [activity, setActivity] = useState({\r\n        name: props.editActData.name ? props.editActData.name : \"\",\r\n        description: props.editActData.description ? props.editActData.description : \"\",\r\n    })\r\n    const [error, setError] = useState({\r\n        name: false,\r\n        description: false,\r\n    })\r\n\r\n    const [successMessage, setSuccessMessage] = useState(\"\")\r\n\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setActivity({\r\n            name: props.editActData.name ? props.editActData.name : \"\",\r\n            description: props.editActData.description ? props.editActData.description : \"\",\r\n        })\r\n    }, [props])\r\n\r\n\r\n    const validatePost = () => {\r\n        let formError = {};\r\n        let valid = true;\r\n\r\n        if ((activity.name).length < 3) {\r\n            valid = false;\r\n            formError = { ...formError, name: true }\r\n        }\r\n        if ((activity.description).length < 3) {\r\n            valid = false;\r\n            formError = { ...formError, description: true }\r\n        }\r\n        setError(formError)\r\n        if (valid) {\r\n            submitForm()\r\n        }\r\n    }\r\n\r\n    console.log('activity', activity);\r\n    const submitForm = () => {\r\n        console.log(\"token414\", `Bearer ${localStorage.getItem('token')}`)\r\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/activities/${props.editActData.id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify({\r\n                name: activity.name,\r\n                description: activity.description\r\n            })\r\n        }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                console.log(\"🚀 ~ file: Update.js ~ line 72 ~ submitForm ~ result\", result)\r\n                if (result && result.error) {\r\n                    setSuccessMessage(result.message)\r\n                    setSuccess(true)\r\n                }\r\n                else {\r\n                    setSuccessMessage(\"Your Routine is successfully updated\")\r\n                    setSuccess(true)\r\n                    props.setEditAct(false);\r\n                    return history.push('/activities');\r\n                }\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    return (\r\n        <div className=\"log\" style={{ backgroundColor: \"lightgrey\", padding: '2rem' }}>\r\n            <div>\r\n                <h1>Update Activity</h1>\r\n                <label>Name : </label>\r\n                <input\r\n                    onChange={(e) => {\r\n                        setActivity({ ...activity, name: e.target.value })\r\n                    }}\r\n                    type=\"text\"\r\n                    id=\"keywords\"\r\n                    placeholder=\"Username...\"\r\n                    value={activity.name} /><br />\r\n                {error.name ? \"Please enter valid title\" : null}<br />\r\n                <label>Description : </label>\r\n                <input\r\n                    onChange={(e) => {\r\n                        setActivity({ ...activity, description: e.target.value })\r\n                    }}\r\n                    type=\"text\"\r\n                    id=\"keywords\"\r\n                    placeholder=\"description...\"\r\n                    value={activity.description} /><br />\r\n                {error.description ? \"Please enter valid description\" : null}<br />\r\n                {error.submitError ? error.errorMessage : null}<br />\r\n                <button onClick={validatePost}>Update</button><br />\r\n                <button onClick={() => props.setEditAct(false)}>Cancel</button><br />\r\n                {success ? successMessage : null}\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Update;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../components/Activities/Card';\r\nimport ActivityCard from '../components/Activities/ActivityCard';\r\nimport Update from '../components/Activities/Update';\r\n\r\nimport { Loading } from '../components';\r\n\r\nconst Activities = () => {\r\n\r\n    const [activity, setActivity] = useState([])\r\n    const [searchInput, setSearchInput] = useState(\"\")\r\n    const [token, setToken] = useState(localStorage.getItem('token'))\r\n    const [routineActivityData, setRoutineActivityData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const [editAct, setEditAct] = useState(false);\r\n    const [editActData, setEditActData] = useState({});\r\n\r\n    useEffect(() => {\r\n        getPublicRoutine()\r\n    }, [!editAct]);\r\n\r\n    const getPublicRoutine = () => {\r\n        setIsLoading(true);\r\n        console.log(\"token2\", `Bearer ${token}`)\r\n        fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                localStorage.setItem('activites', JSON.stringify(result));\r\n                setActivity(result)\r\n                setIsLoading(false);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    const handleSearch = (name) => {\r\n        let newArray = [];\r\n        if (name.length <= 0) {\r\n            newArray = activity\r\n        } else {\r\n            activity.map((item) => {\r\n                if ((item.name).includes(name)) {\r\n                    newArray = [...newArray, item]\r\n                }\r\n            })\r\n        }\r\n        if (name.length > 0) {\r\n            setActivity(newArray)\r\n        } else {\r\n            getPublicRoutine()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"postcardsearch\">\r\n                <h1>Activities</h1>\r\n                <div className=\"searchinput\"><label>Search Activities</label>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setSearchInput(e.target.value)\r\n                            handleSearch(e.target.value)\r\n                        }}\r\n                        type=\"text\"\r\n                        placeholder=\"Search your favorite activity...\"\r\n                        value={searchInput} /><br />\r\n                </div>\r\n                {/* {error.userName ? \"Please enter valid username\" : null}<br/> */}\r\n                {token && token.length > 0 ? <Link to=\"activity/add\">(ADD activity)</Link> : null}\r\n            </div>\r\n            <div style={{ display: 'flex', maxHeight: '75vh', overflowY: 'scroll' }}>\r\n                <div style={{\r\n                    widht: '50%', overflowY: 'scroll'\r\n                }}>\r\n                    {\r\n                        activity.map((postcard, index) => (\r\n                            <Card\r\n                                from=\"activities\"\r\n                                data={postcard}\r\n                                key={index}\r\n                                setEditAct={setEditAct}\r\n                                setEditActData={setEditActData}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                {editAct ?\r\n                    <Update data={routineActivityData} editAct={editAct} editActData={editActData} setEditAct={setEditAct} /> :\r\n                    null\r\n                    // <ActivityCard routineActivityData={routineActivityData} setEditAct={setEditAct} setEditActData={setEditActData} handleDeleteAct={(id) => handleDeleteAct(id)} />\r\n                }\r\n            </div>\r\n            {!isLoading ? null : <Loading />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Activities;\r\n\r\n\r\n","\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n} from 'react-router-dom';\n\n\nimport Login from './routes/Login';\nimport Header from './components/Header';\nimport Register from './routes/Register';\n// import AddPost from './routes/Create'\n// import PostDetail from './routes/PostDetail';\n\nimport Routines from './routes/Routines';\nimport MyRoutines from './routes/MyRoutines';\nimport AddRoutine from './components/MyRoutine/CreateRoutine';\nimport AddActivity from './components/Activities/Create';\n\nimport Activities from './routes/Activities';\n\nimport './style.css';\n\n\nconst App = (props) => {\n  console.log(\"App ~ props\", props)\n\n  const [token, setToken] = useState(localStorage.getItem('token'))\n\n  useEffect(() => {\n    fetchToken()\n  }, [])\n\n  useEffect(() => {\n    console.log(\"useEffect ~ localStorage.getItem('token')\", localStorage.getItem('token'))\n    setToken(localStorage.getItem('token'))\n  }, [localStorage.getItem('token')]);\n\n  const fetchToken = () => {\n\n    let loggedIn = false;\n    if (token) {\n      fetch('https://fitnesstrac-kr.herokuapp.com/api/users/me', {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      }).then(response => response.json())\n        .then(result => {\n          if (result && result.error) {\n            localStorage.setItem('token', \"\");\n            return history.push('/login');\n          }\n          console.log(\"resultIndexJS:\", result);\n        })\n        .catch(console.error);\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <Header\n        token={token}\n      />\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route exact path=\"/routines\">\n          <Routines />\n        </Route>\n        <Route exact path=\"/activities\">\n          <Activities />\n        </Route>\n        {token\n          ?\n          <>\n            <Route exact path='/activity/add'>\n              <AddActivity />\n            </Route>\n            <Route exact path='/routine/add'>\n              <AddRoutine />\n            </Route>\n            {/* <Route path=\"/posts/:id\">\n              <PostDetail />\n            </Route> */}\n            <Route exact path=\"/myroutines\">\n              <MyRoutines />\n            </Route>\n          </> : null}\n\n      </Switch>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('app')\n);\n\n\n// {/* <Login/> */}\n\n//Komal is cool\n"],"sourceRoot":""}